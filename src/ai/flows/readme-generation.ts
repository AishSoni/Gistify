// This file is generated by Firebase Studio.
'use server';
/**
 * @fileOverview Generates a README file for a given codebase using GenAI.
 *
 * - generateReadme - A function that generates a README file.
 * - GenerateReadmeInput - The input type for the generateReadme function.
 * - GenerateReadmeOutput - The return type for the generateReadme function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateReadmeInputSchema = z.object({
  codebaseDescription: z
    .string()
    .describe('A description of the codebase for which to generate a README.'),
  projectFiles: z.array(z.string()).describe('List of project file names.'),
  comments: z.string().describe('Code comments from the codebase.'),
});
export type GenerateReadmeInput = z.infer<typeof GenerateReadmeInputSchema>;

const GenerateReadmeOutputSchema = z.object({
  readmeContent: z.string().describe('The generated README file content.'),
});
export type GenerateReadmeOutput = z.infer<typeof GenerateReadmeOutputSchema>;

export async function generateReadme(input: GenerateReadmeInput): Promise<GenerateReadmeOutput> {
  return generateReadmeFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateReadmePrompt',
  input: {schema: GenerateReadmeInputSchema},
  output: {schema: GenerateReadmeOutputSchema},
  prompt: `You are an expert technical writer, and your task is to generate a comprehensive README file for a given codebase.

  Here's a description of the codebase:
  {{codebaseDescription}}

  Here's a list of the project files:
  {{#each projectFiles}}
  - {{this}}
  {{/each}}

  Here are some code comments from the codebase that provide information:
  {{comments}}

  Based on this information, create a well-structured README file that includes the following sections:

  - Project Title
  - Description
  - Installation Instructions
  - Usage Instructions
  - Contributing Guidelines
  - License Information

  Make sure the README is clear, concise, and easy to understand for developers who are new to the project.
  Your output should be the complete README file content, ready to be saved to a file.
  `,
});

const generateReadmeFlow = ai.defineFlow(
  {
    name: 'generateReadmeFlow',
    inputSchema: GenerateReadmeInputSchema,
    outputSchema: GenerateReadmeOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
